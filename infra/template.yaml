# Resources:
#   ExchangeRatesTable:
#     Type: "AWS::DynamoDB::Table"
#     Properties:
#       TableName: "ExchangeRates"
#       AttributeDefinitions:
#         - AttributeName: "currency_code"
#           AttributeType: "S"
#         - AttributeName: "date"
#           AttributeType: "S"
#       KeySchema:
#         - AttributeName: "currency_code"
#           KeyType: "HASH"
#         - AttributeName: "date"
#           KeyType: "RANGE"
#       BillingMode: "PAY_PER_REQUEST"
#   ApiGateway:
#     Type: "AWS::ApiGateway::RestApi"
#     Properties:
#       Name: "CurrencyExchangeApi"
#   LambdaFunction:
#     Type: "AWS::Lambda::Function"
#     Properties:
#       FunctionName: "CurrencyTrackerLambda"
#       Runtime: "python3.9"
#       Handler: "main.lambda_handler"
#       Code:
#         S3Bucket: "my-lambda-code-bucket"
#         S3Key: "lambda/currency-tracker.zip"
#         # Region: "us-east-1"
#       Environment:
#         Variables:
#           TABLE_NAME: "ExchangeRates"
#       Role: "arn:aws:iam::533267298235:role/LambdaDynamoDBRole"
#       # Events:
#       #   ApiGateway:
#       #     Type: "Api"
#       #     Properties:
#       #       Path: "/{proxy+}"
#       #       Method: "ANY"



#       ApiGateway:
#         Type: "AWS::ApiGateway::RestApi"
#         Properties:
#           Name: "CurrencyExchangeApi"

#       ApiGatewayMethod:
#         Type: "AWS::ApiGateway::Method"
#         Properties:
#           AuthorizationType: NONE
#           HttpMethod: "ANY"
#           ResourceId: !GetAtt ApiGateway.RootResourceId
#           RestApiId: !Ref ApiGateway
#           Integration:
#             IntegrationHttpMethod: "POST"
#             Type: "AWS_PROXY"
#             Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"

#       LambdaApiGatewayInvoke:
#         Type: "AWS::Lambda::Permission"
#         Properties:
#           Action: "lambda:InvokeFunction"
#           FunctionName: !Ref LambdaFunction
#           Principal: "apigateway.amazonaws.com"


# new


Resources:
  ExchangeRatesTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: "ExchangeRates"
      AttributeDefinitions:
        - AttributeName: "currency_code"
          AttributeType: "S"
        - AttributeName: "date"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "currency_code"
          KeyType: "HASH"
        - AttributeName: "date"
          KeyType: "RANGE"
      BillingMode: "PAY_PER_REQUEST"

  ApiGateway:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "CurrencyExchangeApi"

  LambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: "CurrencyTrackerLambda"
      Runtime: "python3.9"
      Handler: "main.lambda_handler"
      Code:
        S3Bucket: "test-bucket-unique123"
        S3Key: "lambda/function.zip"
      Environment:
        Variables:
          TABLE_NAME: "ExchangeRates"
      Role: "arn:aws:iam::533267298235:role/LambdaDynamoDBRole"

  ApiGatewayMethod:
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: NONE
      HttpMethod: "ANY"
      ResourceId: !GetAtt ApiGateway.RootResourceId
      RestApiId: !Ref ApiGateway
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS_PROXY"
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"

  LambdaApiGatewayInvoke:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref LambdaFunction
      Principal: "apigateway.amazonaws.com"
